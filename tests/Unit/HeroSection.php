<?php
/**
 * Child Theme Library
 *
 * WARNING: This file is a part of the core Child Theme Library.
 * DO NOT edit this file under any circumstances. Please use
 * the functions.php file to make any theme modifications.
 *
 * @package   SEOThemes\ChildThemeLibrary
 * @since     1.0.0
 * @link      https://github.com/seothemes/child-theme-library
 * @author    SEO Themes
 * @copyright Copyright Â© 2018 SEO Themes
 * @license   GPL-2.0-or-later
 */

namespace SEOThemes\ChildThemeLibrary;

/**
 * Adds hero section logic to child theme.
 *
 * @since 1.4.0
 */
class HeroSection {

	/**
	 * Constructor.
	 *
	 * @since  1.4.0
	 *
	 * @return void
	 */
	public function __construct() {

		// Do nothing.

	}

	/**
	 * Initialize class.
	 *
	 * @since  1.5.0
	 *
	 * @return void
	 */
	public function init() {

		if ( is_admin() || ! current_theme_supports( 'hero-section' ) ) {

			return;

		}

		remove_action( 'genesis_entry_header', 'genesis_entry_header_markup_open', 5 );
		remove_action( 'genesis_entry_header', 'genesis_do_post_title' );
		remove_action( 'genesis_entry_header', 'genesis_entry_header_markup_close', 15 );
		remove_action( 'genesis_before_loop', 'genesis_do_posts_page_heading' );
		remove_action( 'genesis_archive_title_descriptions', 'genesis_do_archive_headings_open', 5, 3 );
		remove_action( 'genesis_archive_title_descriptions', 'genesis_do_archive_headings_close', 15, 3 );
		remove_action( 'genesis_before_loop', 'genesis_do_date_archive_title' );
		remove_action( 'genesis_before_loop', 'genesis_do_blog_template_heading' );
		remove_action( 'genesis_before_loop', 'genesis_do_taxonomy_title_description', 15 );
		remove_action( 'genesis_before_loop', 'genesis_do_author_title_description', 15 );
		remove_action( 'genesis_before_loop', 'genesis_do_cpt_archive_title_description' );
		remove_action( 'genesis_before_loop', 'genesis_do_search_title' );
		remove_action( 'woocommerce_single_product_summary', 'woocommerce_template_single_title', 5 );
		remove_action( 'woocommerce_before_shop_loop', 'woocommerce_result_count', 20 );
		add_filter( 'woocommerce_show_page_title', '__return_null' );
		add_filter( 'genesis_search_title_output', '__return_false' );
		add_action( 'child_theme_hero_section', 'genesis_do_posts_page_heading' );
		add_action( 'child_theme_hero_section', 'genesis_do_date_archive_title' );
		add_action( 'child_theme_hero_section', 'genesis_do_taxonomy_title_description' );
		add_action( 'child_theme_hero_section', 'genesis_do_author_title_description' );
		add_action( 'child_theme_hero_section', 'genesis_do_cpt_archive_title_description' );
		add_action( 'child_theme_hero_section', [ $this, 'title' ], 10 );
		add_action( 'child_theme_hero_section', [ $this, 'excerpt' ], 20 );
		add_action( 'be_title_toggle_remove', [ $this, 'title_toggle' ] );
		add_action( 'genesis_before_content', [ $this, 'remove_404_title' ] );
		add_action( 'genesis_before_content_sidebar_wrap', [ $this, 'display' ] );

	}

	/**
	 * Remove default title of 404 pages.
	 *
	 * @since  1.0.0
	 *
	 * @return void
	 */
	public function remove_404_title() {

		if ( is_404() ) {

			add_filter( 'genesis_markup_entry-title_open', '__return_false' );
			add_filter( 'genesis_markup_entry-title_content', '__return_false' );
			add_filter( 'genesis_markup_entry-title_close', '__return_false' );

		}

	}

	/**
	 * Integrate with Genesis Title Toggle plugin.
	 *
	 * @since  1.0.0
	 *
	 * @author Bill Erickson
	 * @link   http://billerickson.net/code/genesis-title-toggle-theme-integration
	 *
	 * @return void
	 */
	public function title_toggle() {

		remove_action( 'child_theme_hero_section', [ $this, 'title' ], 10 );
		remove_action( 'child_theme_hero_section', [ $this, 'excerpt' ], 20 );

	}

	/**
	 * Display title in hero section.
	 *
	 * @since  1.0.0
	 *
	 * @return void
	 */
	public function title() {

		if ( is_home() || is_archive() || is_category() || is_tag() || is_tax() || is_search() || is_page_template( 'page_blog.php' ) ) {

			add_action( 'genesis_entry_header', 'genesis_do_post_title', 2 );

		}

		if ( class_exists( 'WooCommerce' ) && is_shop() ) {

			genesis_markup(
				[
					'open'    => '<h1 %s>',
					'close'   => '</h1>',
					'content' => get_the_title( wc_get_page_id( 'shop' ) ),
					'context' => 'entry-title',
				]
			);

		} elseif ( is_home() && 'posts' === get_option( 'show_on_front' ) ) {

			genesis_markup(
				[
					'open'    => '<h1 %s>',
					'close'   => '</h1>',
					'content' => apply_filters( 'child_theme_latest_posts_title', esc_html__( 'Latest Posts', 'child-theme-library' ) ),
					'context' => 'entry-title',
				]
			);

		} elseif ( is_404() ) {

			genesis_markup(
				[
					'open'    => '<h1 %s>',
					'close'   => '</h1>',
					'content' => apply_filters( 'genesis_404_entry_title', esc_html__( 'Not found, error 404', 'child-theme-library' ) ), // phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedHooknameFound -- Parent theme prefix.
					'context' => 'entry-title',
				]
			);

		} elseif ( is_search() ) {

			genesis_markup(
				[
					'open'    => '<h1 %s>',
					'close'   => '</h1>',
					'content' => apply_filters( 'genesis_search_title_text', esc_html__( 'Search results for: ', 'child-theme-library' ) ) . get_search_query(), // phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedHooknameFound -- Parent theme prefix.
					'context' => 'entry-title',
				]
			);

		} elseif ( is_page_template( 'page_blog.php' ) ) {

			do_action( 'genesis_archive_title_descriptions', get_the_title(), '', 'posts-page-description' ); // phpcs:ignore WordPress.NamingConventions.PrefixAllGlobals.NonPrefixedHooknameFound -- Parent theme prefix.

		} elseif ( is_singular() ) {

			genesis_do_post_title();

		}

	}

	/**
	 * Display page excerpt.
	 *
	 * @since  1.0.0
	 *
	 * @return void
	 */
	public function excerpt() {

		if ( class_exists( 'WooCommerce' ) && is_shop() ) {

			woocommerce_result_count();

		} elseif ( is_home() && 'posts' === get_option( 'show_on_front' ) ) {

			printf( '<p itemprop="description">%s</p>', esc_html( apply_filters( 'child_theme_latest_posts_excerpt', __( 'Showing the latest posts', 'child-theme-library' ) ) ) );

		} elseif ( is_search() ) {

			$id = get_page_by_path( 'search' );

			if ( has_excerpt( $id ) ) {

				printf( '<p itemprop="description">%s</p>', do_shortcode( get_the_excerpt( $id ) ) );

			}
		} elseif ( is_404() ) {

			$id = get_page_by_path( 'error' );

			if ( has_excerpt( $id ) ) {

				printf( '<p itemprop="description">%s</p>', do_shortcode( get_the_excerpt( $id ) ) );

			}
		} elseif ( ( is_singular() ) && ! is_singular( 'product' ) && has_excerpt() ) {

			printf( '<p itemprop="description">%s</p>', do_shortcode( get_the_excerpt() ) );

		}
	}

	/**
	 * Custom header image callback.
	 *
	 * Loads custom header or featured image depending on what is set on a per
	 * page basis. If a featured image is set for a page, it will override
	 * the default header image. It also gets the image for custom post
	 * types by looking for a page with the same slug as the CPT e.g
	 * the Portfolio CPT archive will pull the featured image from
	 * a page with the slug of 'portfolio', if the page exists.
	 *
	 * @since  1.0.0
	 *
	 * @return string
	 */
	public static function custom_header() {

		$id = '';

		if ( class_exists( 'WooCommerce' ) && is_shop() ) {

			$id = wc_get_page_id( 'shop' );

		} elseif ( is_post_type_archive() ) {

			$id = get_page_by_path( get_query_var( 'post_type' ) );

		} elseif ( is_front_page() ) {

			$id = get_option( 'page_on_front' );

		} elseif ( 'posts' === get_option( 'show_on_front' ) && is_home() ) {

			$id = get_option( 'page_for_posts' );

		} elseif ( is_search() ) {

			$id = get_page_by_path( 'search' );

		} elseif ( is_404() ) {

			$id = get_page_by_path( 'error' );

		} elseif ( is_singular() ) {

			$id = get_the_id();

		}

		$url = get_the_post_thumbnail_url( $id, 'hero' );

		if ( '0' === $id || ! $url ) {

			$url = get_header_image();

		}

		if ( current_theme_supports( 'hero-section' ) || is_front_page() ) {

			$selector = get_theme_support( 'custom-header', 'header-selector' );

			return printf( '<style type="text/css">' . esc_attr( $selector ) . '{background-image:url(%s)}</style>' . "\n", esc_url( $url ) );

		}

		return '';

	}

	/**
	 * Display the hero section.
	 *
	 * @since  1.0.0
	 *
	 * @return void
	 */
	public function display() {

		genesis_markup(
			[
				'open'    => '<section %s><div class="wrap">',
				'context' => 'hero-section',
			]
		);

		do_action( 'child_theme_hero_section' );

		genesis_markup(
			[
				'close'   => '</div></section>',
				'context' => 'hero-section',
			]
		);

	}

}
